# This workflow will install Python dependencies and run only integration tests
# This is a standalone runner such that if integration testing fails it does not
#Â impact other runners.
# Fixing OS version to avoid breaking OS changes during development stage.
# Will open up OS versions before release.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: MacOS Integration Tests

on:
  push:
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    name: Integration
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        os: ["macos-12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install '.[test]'
    - name: Install java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11.0.21'
    - name: Check Java Install
      run: |
        java --version
    - name: Run All tests, including integration & sanitycheck
      run: |
        pytest --runinteg --sanitycheck
