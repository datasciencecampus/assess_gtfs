---
title: Explanation
toc: true
---

These explanation pages provide an understanding of the `assess-gtfs` package.

`assess-gtfs` allows users to validate, clean, inspect and filter transit
timetable data in the [General Transit Feed Specification](gtfs-spec) (GTFS)
format.

## What is GTFS?

GTFS files are compressed zip archives of text files. Each text file containing
information about routes, trips, calendar, stop locations and so on. Various
transport modelling software are able to use these files as a relational
database in order to undertake routing operations.

Below are the file contents of a small sample of UK GTFS.

```{.abc}
.../tests/data/chester-20230816-small_gtfs/
├── agency.txt
├── calendar.txt
├── calendar_dates.txt
├── feed_info.txt
├── routes.txt
├── shapes.txt
├── stop_times.txt
├── stops.txt
└── trips.txt

1 directory, 9 files

```

## Working with GTFS

If you would prefer a demonstration of `assess-gtfs`, please follow the
[tutorial][tute].

### Filtering GTFS

When undertaking routing operations with GTFS, you typically need to filter
large feeds to an area of interest. This ensures that building a transport
network with a package such as [r<sup>5</sup>py][r5py] is optimised. Feeds can
be restricted based upon location with a bounding box. They can also be
restricted to a date or list of dates within the feed calendar. For more on
filtering GTFS, please see the [`assess-gtfs` api docs][f-gtfs].

### Inspecting GTFS

Undertaking routing analysis tends to happen at a specific location and time or
time window. It is important to assess the service distribution over the
available dates within the GTFS. GTFS tend to come with a range of calendar
dates, but the service volume across those dates can be variable and dependent
upon the publication frequency of the specific feed.

The objective is to ensure a selected time of analysis is representative of
average service volume within the feed. For a guide to doing this with
`assess-gtfs`, please see the tutorial section on
[summarising GTFS][summ-gtfs].

### Validating GTFS

When working with GTFS from a range of sources, it is important to understand
whether the feed you intend to use is compliant. Online tools like that
available on the French government's [Transport Data Portal][gtfs-valid-france]
are excellent choices for manual validation of a small number of feeds.

`assess-gtfs` produces tabular outputs for specification warnings and errors
using [`gtfs_kit`][gtfskit] under the hood. Note that not all of these errors
are as severe as they initially appear. For example, the below validation table
is commonly seen when validating British GTFS:

```{python}
#| echo: false
#| warning: false
import glob
import os

from assess_gtfs.multi_validation import MultiGtfsInstance
from assess_gtfs.utils.constants import PKG_PATH

data_dir = os.path.join(PKG_PATH, "data")
gtfs = MultiGtfsInstance(glob.glob(data_dir + "/*.zip"))
gtfs.is_valid().sort_index()
```

The first row in the validity table shows an apparent error, reporting "Invalid route_type; maybe has extra space characters". Examining the routes table for the affected rows:

```{python}
#| echo: false
gtfs.instances[0].feed.routes.head(10)["route_type"]
```

We see that rows 1 through 4 use route_type 200. Google have proposed an
[extension to GTFS route_type][google-ext-spec] that many publishers of GTFS
have adopted. Here you can see that route_type 200 means a coach service and
would not cause a problem for most routing software. For more on validating
GTFS feeds, consult the [api reference][is-valid] for implementation details.

### Cleaning GTFS

`assess-gtfs` can be used to attempt to resolve some of the identified problems
in GTFS. To see how to do this, please follow along with the
[tutorial's `clean_feed` section][tute-clean-feed]. Alternatively, visit the
[api documentation][api-clean-feed] for more detail.

 Note that cleaning for all specification alerts has not been implemented. To
raise a feature request with the package maintainers, please do so on
[GitHub][gh-issues].

[gtfs-spec]: https://gtfs.org/
[r5py]: https://r5py.readthedocs.io/en/stable/
[tute]: /docs/tutorials/index.qmd
[f-gtfs]: /docs/reference/gtfs_utils.qmd#assess_gtfs.gtfs_utils.filter_gtfs
[summ-gtfs]: /docs/tutorials/index.qmd#trip-and-route-summaries
[gtfs-valid-france]: https://transport.data.gouv.fr/validation
[gtfskit]: https://github.com/mrcagney/gtfs_kit
[google-ext-spec]: https://developers.google.com/transit/gtfs/reference/extended-route-types
[is-valid]: /docs/reference/validation.qmd#assess_gtfs.validation.GtfsInstance.is_valid
[tute-clean-feed]: /docs/tutorials/index.qmd#clean-feed
[api-clean-feed]: /docs/reference/validation.qmd#assess_gtfs.validation.GtfsInstance.clean_feed
[gh-issues]: https://github.com/datasciencecampus/assess_gtfs/issues
